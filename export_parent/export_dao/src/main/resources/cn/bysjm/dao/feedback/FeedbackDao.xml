<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.bysjm.dao.feedback.FeedbackDao">
  <resultMap id="BaseResultMap" type="cn.bysjm.domain.feedBack.Feedback">
    <id column="FEEDBACK_ID" jdbcType="VARCHAR" property="feedbackId" />
    <result column="INPUT_BY" jdbcType="VARCHAR" property="inputBy" />
    <result column="INPUT_TIME" jdbcType="TIMESTAMP" property="inputTime" />
    <result column="TITLE" jdbcType="VARCHAR" property="title" />
    <result column="CLASS_TYPE" jdbcType="CHAR" property="classType" />
    <result column="TEL" jdbcType="VARCHAR" property="tel" />
    <result column="ANSWER_BY" jdbcType="VARCHAR" property="answerBy" />
    <result column="ANSWER_TIME" jdbcType="TIMESTAMP" property="answerTime" />
    <result column="RESOLUTION" jdbcType="CHAR" property="resolution" />
    <result column="DIFFICULTY" jdbcType="CHAR" property="difficulty" />
    <result column="IS_SHARE" jdbcType="CHAR" property="isShare" />
    <result column="STATE" jdbcType="CHAR" property="state" />
    <result column="CREATE_BY" jdbcType="VARCHAR" property="createBy" />
    <result column="CREATE_DEPT" jdbcType="VARCHAR" property="createDept" />
    <result column="CREATE_TIME" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    FEEDBACK_ID, INPUT_BY, INPUT_TIME, TITLE, CLASS_TYPE, TEL, ANSWER_BY, ANSWER_TIME, 
    RESOLUTION, DIFFICULTY, IS_SHARE, STATE, CREATE_BY, CREATE_DEPT, CREATE_TIME
  </sql>
  <sql id="Blob_Column_List">
    CONTENT, SOLVE_METHOD
  </sql>
  <select id="selectByExample" parameterType="cn.bysjm.domain.feedBack.FeedbackExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from feedBack_c
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from feedBack_c
    where FEEDBACK_ID = #{feedBackId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="cn.bysjm.domain.feedBack.FeedbackExample">
    delete from feedBack_c
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <select id="countByExample" parameterType="cn.bysjm.domain.feedBack.FeedbackExample" resultType="java.lang.Long">
    select count(*) from feedBack_c
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExample" parameterType="map">
    update feedBack_c
    set FEEDBACK_ID = #{record.feedBackId,jdbcType=VARCHAR},
      INPUT_BY = #{record.inputBy,jdbcType=VARCHAR},
      INPUT_TIME = #{record.inputTime,jdbcType=TIMESTAMP},
      TITLE = #{record.title,jdbcType=VARCHAR},
      CLASS_TYPE = #{record.classType,jdbcType=CHAR},
      TEL = #{record.tel,jdbcType=VARCHAR},
      ANSWER_BY = #{record.answerBy,jdbcType=VARCHAR},
      ANSWER_TIME = #{record.answerTime,jdbcType=TIMESTAMP},
      RESOLUTION = #{record.resolution,jdbcType=CHAR},
      DIFFICULTY = #{record.difficulty,jdbcType=CHAR},
      IS_SHARE = #{record.isShare,jdbcType=CHAR},
      STATE = #{record.state,jdbcType=CHAR},
      CREATE_BY = #{record.createBy,jdbcType=VARCHAR},
      CREATE_DEPT = #{record.createDept,jdbcType=VARCHAR},
      CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.bysjm.domain.feedBack.Feedback">
    update feedBack_c
    set INPUT_BY = #{inputBy,jdbcType=VARCHAR},
      INPUT_TIME = #{inputTime,jdbcType=TIMESTAMP},
      TITLE = #{title,jdbcType=VARCHAR},
      CLASS_TYPE = #{classType,jdbcType=CHAR},
      TEL = #{tel,jdbcType=VARCHAR},
      ANSWER_BY = #{answerBy,jdbcType=VARCHAR},
      ANSWER_TIME = #{answerTime,jdbcType=TIMESTAMP},
      RESOLUTION = #{resolution,jdbcType=CHAR},
      DIFFICULTY = #{difficulty,jdbcType=CHAR},
      IS_SHARE = #{isShare,jdbcType=CHAR},
      STATE = #{state,jdbcType=CHAR},
      CREATE_BY = #{createBy,jdbcType=VARCHAR},
      CREATE_DEPT = #{createDept,jdbcType=VARCHAR},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP}
    where FEEDBACK_ID = #{feedBackId,jdbcType=VARCHAR}
  </update>
</mapper>